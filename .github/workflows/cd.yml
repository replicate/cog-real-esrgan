name: replicate-cd

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model: ['daanelson/real-esrgan-a100', 'nightmareai/real-esrgan']

    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: what changed
      id: what-changed
      run: |
        FILES_CHANGED=$(git diff --name-only --diff-filter=AMR origin/main HEAD | xargs)
        echo "FILES_CHANGED=$FILES_CHANGED" >> $GITHUB_ENV
        if echo "$FILES_CHANGED" | grep -q 'cog.yaml'; then
            echo "cog-push=true" >> $GITHUB_OUTPUT
          else
            echo "cog-push=false" >> $GITHUB_OUTPUT
          fi
        if ${{ contains(github.event.head_commit.message, '[cog build]') }}; then
            echo "cog-push=true" >> $GITHUB_OUTPUT
          fi

    # if cog.yaml changes - cog build and push. else - yolo build and push!
    - name: did-it-tho
      env:
        COG_PUSH: ${{ steps.what-changed.outputs.cog-push }}
      run: |
        echo "cog push?: $COG_PUSH"
        echo "changed files: $FILES_CHANGED"

    - name: setup-cog
      if: steps.what-changed.outputs.cog-push == 'true'
      uses: replicate/setup-cog@v2
      with:
        token: ${{ secrets.REPLICATE_API_TOKEN }}
        install-cuda: false
        cog-version: "v0.10.0-alpha17"

    - name: free-disk-space
      if: steps.what-changed.outputs.cog-push == 'true'
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true

    - name: cog-build
      if: steps.what-changed.outputs.cog-push == 'true'
      run: |
        cog build

    - name: cog-push
      if: steps.what-changed.outputs.cog-push == 'true'
      run: |
        cog push r8.im/${{ matrix.model}}

    - name: install-yolo
      if: steps.what-changed.outputs.cog-push == 'false'
      run: |
        sudo curl -o /usr/local/bin/yolo -L "https://github.com/replicate/yolo/releases/latest/download/yolo_$(uname -s)_$(uname -m)"
        sudo chmod +x /usr/local/bin/yolo

    - name: yolo-push
      if: steps.what-changed.outputs.cog-push == 'false'
      env:
       REPLICATE_API_TOKEN: ${{secrets.REPLICATE_API_TOKEN}}
      run: |
        echo "pushing changes to ${{matrix.model}}"
        echo "changed files: $FILES_CHANGED"
        yolo push --base ${{matrix.model}} --dest ${{matrix.model}} $FILES_CHANGED

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: install python test deps
      run: |
        pip install -r requirements_test.txt

    - name: test model
      env:
       REPLICATE_API_TOKEN: ${{secrets.REPLICATE_API_TOKEN}}
       PROD_MODEL: ${{ matrix.model }}
       TEST_ENV: 'prod'
      run: |
        pytest replicate_tests
